{"version":3,"file":"findcohortcourses.min.js","sources":["../src/findcohortcourses.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Frameworks datasource.\n *\n * This module is compatible with core/form-autocomplete.\n *\n * @copyright  2019 RvD <helpdesk@sebsoft.nl>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/ajax', 'core/notification'], function($, Ajax, Notification) {\n\n    return /** @alias module:block_coupon/findcohortcourses */ {\n\n        /**\n         * List users.\n         *\n         * @param {Object} options Additional parameters to pass to the external function.\n         * @return {Promise}\n         */\n        list: function(options) {\n            var promise,\n                args = {};\n\n            $.extend(args, typeof options === 'undefined' ? {} : options);\n            promise = Ajax.call([{\n                methodname: 'block_coupon_find_potential_cohort_courses',\n                args: args\n            }])[0];\n\n            return promise.fail(Notification.exception);\n        },\n\n        /**\n         * Process the results for auto complete elements.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {Array} results An array or results.\n         * @return {Array} New array of results.\n         */\n        processResults: function(selector, results) {\n            var options = [];\n            $.each(results, function(index, data) {\n                options.push({\n                    value: data.id,\n                    label: data.name\n                });\n            });\n            return options;\n        },\n\n        /**\n         * Source of data for Ajax element.\n         *\n         * @param {String} selector The selector of the auto complete element.\n         * @param {String} query The query string.\n         * @param {Function} callback A callback function receiving an array of results.\n         */\n        transport: function(selector, query, callback) {\n            // Find cohortid.\n            var cohortid = $(selector).closest('[data-fieldtype=\"autocomplete\"]').find('select[data-cohortid]').data('cohortid');\n            return this.list({\n                cohortid: cohortid,\n                query: query\n            }).then(callback);\n        }\n    };\n\n});\n"],"names":["define","$","Ajax","Notification","list","options","args","extend","call","methodname","fail","exception","processResults","selector","results","each","index","data","push","value","id","label","name","transport","query","callback","cohortid","closest","find","this","then"],"mappings":";;;;;;;;AAwBAA,wCAAO,CAAC,SAAU,YAAa,sBAAsB,SAASC,EAAGC,KAAMC,oBAER,CAQvDC,KAAM,SAASC,aAEPC,KAAO,UAEXL,EAAEM,OAAOD,UAAyB,IAAZD,QAA0B,GAAKA,SAC3CH,KAAKM,KAAK,CAAC,CACjBC,WAAY,6CACZH,KAAMA,QACN,GAEWI,KAAKP,aAAaQ,YAUrCC,eAAgB,SAASC,SAAUC,aAC3BT,QAAU,UACdJ,EAAEc,KAAKD,SAAS,SAASE,MAAOC,MAC5BZ,QAAQa,KAAK,CACTC,MAAOF,KAAKG,GACZC,MAAOJ,KAAKK,UAGbjB,SAUXkB,UAAW,SAASV,SAAUW,MAAOC,cAE7BC,SAAWzB,EAAEY,UAAUc,QAAQ,mCAAmCC,KAAK,yBAAyBX,KAAK,mBAClGY,KAAKzB,KAAK,CACbsB,SAAUA,SACVF,MAAOA,QACRM,KAAKL"}